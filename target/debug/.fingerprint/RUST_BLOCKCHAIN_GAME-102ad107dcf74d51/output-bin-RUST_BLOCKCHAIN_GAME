{"$message_type":"diagnostic","message":"expected item after doc comment","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":30844,"byte_end":30853,"line_start":1185,"line_end":1185,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"/// code.","highlight_start":1,"highlight_end":10}],"label":"this doc comment doesn't document anything","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":28791,"byte_end":30843,"line_start":1117,"line_end":1184,"column_start":1,"column_end":101,"is_primary":false,"text":[{"text":"/// The above Rust code defines a trait `Bool` and a struct `Math` implementing the trait, with a main","highlight_start":1,"highlight_end":103},{"text":"/// function that creates a `Math` instance and prints its information.","highlight_start":1,"highlight_end":72},{"text":"// trait Bool {","highlight_start":1,"highlight_end":16},{"text":"//     fn get_info(&self) -> String;","highlight_start":1,"highlight_end":37},{"text":"// }","highlight_start":1,"highlight_end":5},{"text":"// struct Math {","highlight_start":1,"highlight_end":17},{"text":"//     title: String,","highlight_start":1,"highlight_end":22},{"text":"//     author: String,","highlight_start":1,"highlight_end":23},{"text":"//     pages: u32","highlight_start":1,"highlight_end":18},{"text":"// }","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// impl Bool for Math {","highlight_start":1,"highlight_end":24},{"text":"//     fn get_info(&self) -> String {","highlight_start":1,"highlight_end":38},{"text":"//         let info: String = format!(\"Title {}, author {}, pages {}\", self.title, self.author, self.pages);","highlight_start":1,"highlight_end":109},{"text":"//         return info","highlight_start":1,"highlight_end":23},{"text":"//     }","highlight_start":1,"highlight_end":9},{"text":"// }","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// fn main() {","highlight_start":1,"highlight_end":15},{"text":"//     let math_book = Math {","highlight_start":1,"highlight_end":30},{"text":"//         title: \"Math book\".to_string(),","highlight_start":1,"highlight_end":43},{"text":"//         author: \"Vo Le\".to_string(),","highlight_start":1,"highlight_end":40},{"text":"//         pages: 200","highlight_start":1,"highlight_end":22},{"text":"//     };","highlight_start":1,"highlight_end":10},{"text":"//     let info: String = math_book.get_info();","highlight_start":1,"highlight_end":48},{"text":"//     print!(\"Book: {}\", info);","highlight_start":1,"highlight_end":33},{"text":"// }","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// struct Rectangle {","highlight_start":1,"highlight_end":22},{"text":"//     width: u32,","highlight_start":1,"highlight_end":19},{"text":"//     height: u32","highlight_start":1,"highlight_end":19},{"text":"// }","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// impl Rectangle {","highlight_start":1,"highlight_end":20},{"text":"//     fn area(&self) -> u32 {","highlight_start":1,"highlight_end":31},{"text":"//         let area: u32 = self.width * self.height;","highlight_start":1,"highlight_end":53},{"text":"//         return area;","highlight_start":1,"highlight_end":24},{"text":"//     }","highlight_start":1,"highlight_end":9},{"text":"","highlight_start":1,"highlight_end":1},{"text":"//     fn resize(&mut self, _width: u32, _height: u32) {","highlight_start":1,"highlight_end":57},{"text":"//         self.width = _width;","highlight_start":1,"highlight_end":32},{"text":"//         self.height = _height;","highlight_start":1,"highlight_end":34},{"text":"//     }","highlight_start":1,"highlight_end":9},{"text":"// }","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// fn main () {","highlight_start":1,"highlight_end":16},{"text":"//     let mut rectangle = Rectangle{","highlight_start":1,"highlight_end":38},{"text":"//         width: 10,","highlight_start":1,"highlight_end":22},{"text":"//         height: 10,","highlight_start":1,"highlight_end":23},{"text":"//     };","highlight_start":1,"highlight_end":10},{"text":"//     println!(\"Rectangle is {}\", rectangle.area());","highlight_start":1,"highlight_end":54},{"text":"//     rectangle.resize(20, 209);","highlight_start":1,"highlight_end":34},{"text":"//     println!(\"Rectangle after resize {}\", rectangle.area());","highlight_start":1,"highlight_end":64},{"text":"// }","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"/// This Rust program defines a struct RGBColor with three u8 fields representing red, green, and blue","highlight_start":1,"highlight_end":103},{"text":"/// values, and then prints out these values for a specific color.","highlight_start":1,"highlight_end":67},{"text":"// struct RGBColor (u8, u8, u8);","highlight_start":1,"highlight_end":33},{"text":"// fn main() {","highlight_start":1,"highlight_end":15},{"text":"//     let red_color = RGBColor(100, 100, 100);","highlight_start":1,"highlight_end":48},{"text":"//     let red_value = red_color.0;","highlight_start":1,"highlight_end":36},{"text":"//     let green_value = red_color.1;","highlight_start":1,"highlight_end":38},{"text":"//     let blue_value = red_color.2;","highlight_start":1,"highlight_end":37},{"text":"//     println!(\"Red {}, Green {}, Blue {}\", red_value, green_value, blue_value);","highlight_start":1,"highlight_end":82},{"text":"// }","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"/// The above code is written in Rust and defines a struct `Car` with fields `brand` (String), `model`","highlight_start":1,"highlight_end":103},{"text":"/// (String), and `year` (u16). However, the struct is commented out, so it is not being used in the","highlight_start":1,"highlight_end":101}],"label":"other attributes here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected item after doc comment\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:1185:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// The above Rust code defines a trait `Bool` and a struct `Math` implementing the trait, with a main\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// function that creates a `Math` instance and prints its information.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m// trait Bool {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//     fn get_info(&self) -> String;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// The above code is written in Rust and defines a struct `Car` with fields `brand` (String), `model`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// (String), and `year` (u16). However, the struct is commented out, so it is not being used in the\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________________________________________________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mother attributes here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m/// code.\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthis doc comment doesn't document anything\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error\u001b[0m\n\n"}
