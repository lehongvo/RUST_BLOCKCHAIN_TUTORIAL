var searchIndex = new Map(JSON.parse('[\
["cargo_lib",{"doc":"","t":"FKMNMNMNNNNNMNMNMNMNNMNMNMNMNMNNNN","n":["Company","Office","add_employees","add_employees","average_salary","average_salary","average_salary_of_department","average_salary_of_department","borrow","borrow_mut","fmt","from","get_all_department_in_company","get_all_department_in_company","get_all_employees_in_company","get_all_employees_in_company","get_all_salary_of_employee","get_all_salary_of_employee","get_salary_of_employee","get_salary_of_employee","into","max_salary_of_company","max_salary_of_company","max_salary_of_department","max_salary_of_department","min_salary_of_company","min_salary_of_company","min_salary_of_department","min_salary_of_department","new","new","try_from","try_into","type_id"],"q":[[0,"cargo_lib"],[34,"core::option"],[35,"core::fmt"],[36,"core::fmt"],[37,"alloc::vec"],[38,"core::result"],[39,"core::any"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,1,5,1,5,1,5,5,5,5,5,1,5,1,5,1,5,1,5,5,1,5,1,5,1,5,1,5,1,5,5,5,5],"f":[0,0,[[1,2,2,3],4],[[5,2,2,3],4],[1,[[6,[3]]]],[5,[[6,[3]]]],[[1,2],[[6,[3]]]],[[5,2],[[6,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,7],8],[-1,-1,[]],[1,[[10,[9]]]],[5,[[10,[9]]]],[1,[[10,[9]]]],[5,[[10,[9]]]],[1,[[6,[3]]]],[5,[[6,[3]]]],[[1,2,2],[[6,[3]]]],[[5,2,2],[[6,[3]]]],[-1,-2,[],[]],[1,[[6,[3]]]],[5,[[6,[3]]]],[[1,2],[[6,[3]]]],[[5,2],[[6,[3]]]],[1,[[6,[3]]]],[5,[[6,[3]]]],[[1,2],[[6,[3]]]],[[5,2],[[6,[3]]]],[[],1],[[],5],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]]],"c":[],"p":[[10,"Office",0],[1,"str"],[1,"f64"],[1,"tuple"],[5,"Company",0],[6,"Option",34],[5,"Formatter",35],[8,"Result",35],[5,"String",36],[5,"Vec",37],[6,"Result",38],[5,"TypeId",39]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
